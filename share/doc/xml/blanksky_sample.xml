<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE cxchelptopics SYSTEM "CXCHelp.dtd" [
  <!ENTITY upr  "unix&#37;">
  <!ENTITY cltool "blanksky_sample">
  <!ENTITY mdash "&#8212;">
  <!ENTITY combinefile "psf_bkg_out">
]>

<cxchelptopics>
  <ENTRY key="&cltool;" context="tools"
         refkeywords="background caldb &cltool;"
         seealsogroups=""
         displayseealsogroups="">   

    <SYNOPSIS>
      Create a scaled background events file by
      using the scale factor calculated by and sampling the blanksky 
      background file generated by the "blanksky" script for an observation. 
    </SYNOPSIS>

    <DESC>
      <PARA>
	This script will create a scaled background events file given
	a customized blanksky background events file with the BKGSCALE/BKGSCALn
	header keyword set.    
      </PARA>

      <PARA>
	With a given blanksky background, the "&cltool;"
	script estimates the number of background photons needed to
	match the observation based on the the background scaling
	factor(s) calculated for that observation by the "blanksky"
	script.  In order to select a random subset of blanksky events
	-- which are listed in sky x and y coordinates -- on a
	per-chip basis, a random number between 0 and 1/BKGSCALn is
	assigned to each event, and events with a random number less
	than or equal to 1 are selected. 
<!--//
	since this involves a random number, this also introduces a
	"random error" to the number of events selected. 
//-->
      </PARA>      

      <PARA>
	A random time between the TSTART and and TSTOP are then
	assigned to each selected event and then if necessary, column
	data types are converted to match those used in the reference
	input file.
      </PARA>

      <PARA>
	Optionally, the sampled background and the input reference
	file can be combined by setting the "&combinefile;" parameter.
	 Another optional use case is to "fill in the hole" if the "regionfile" and
	"fill_out" parameters are set. The regions are then used to
	exclude the events in the input reference file and then
	filling in the regions with sampled background events output
	to the "fill_out" file.
      </PARA>

      <PARA>
        The needed ACIS blanksky background files are selected for
        the observation and then processed as outlined in
        the <HREF link="https://cxc.harvard.edu/ciao/threads/acisbackground/#acisbg">"Analysing
        the ACIS Background with the 'Blank-Sky' Files"</HREF>
        analysis thread and HRC-I observations, processing the particle background
        files are described
        in <HREF link="https://cxc.harvard.edu/ciao/threads/hrci_bg_events/">The
        HRC-I Background Event Files</HREF>; these threads are
        automated by
        the <HREF link="https://cxc.harvard.edu/ciao/ahelp/blanksky.html">"blanksky"</HREF>
        script.  Multi-CCD observations
        will be scaled on a per chip basis, using the chip-appropriate
        BKGSCALn header keywords to produce the background image.
        Energy and PI filters applied to the reference image file -- for
        ACIS and HRC-I observations, respectively -- will also be
        applied to the background image.  
      </PARA>

    </DESC>

    
    
    <QEXAMPLELIST>
      <QEXAMPLE>
        <SYNTAX>
          <LINE>
	    &upr; &cltool; 
	    infile=evt2.fits 
	    bkgfile=bsky_particle.fits 
	    bkgout=bkg_sample.fits
	  </LINE>
        </SYNTAX>
        <DESC>
          <PARA>
	    This is the case that you'd be most interested in, since
	    the bkg_sample.fits file will be the background file that
	    you'd feed into specextract.  The "infile" is the
	    reference events file and "bkgfile" is the background file
	    generated by blanksky containing the background scaling
	    header keywords. 
	  </PARA>
	</DESC>
      </QEXAMPLE>

      <QEXAMPLE>
        <SYNTAX>
          <LINE>
	    &upr; &cltool; 
	    infile=marx_evt2.fits 
	    bkgfile=bsky_particle.fits 
	    bkgout=bkg_sample.fits 
	    psf_bkg_out=marx+bsky_evt.fits
	  </LINE>
        </SYNTAX>
        <DESC>
          <PARA>
	    Another use case is for combining the scaled background
	    events with an events file generated out of a PSF
	    simulation.  The "psf_bkg_out" parameter is the results
	    from combining the "infile" and "bkgout". 
	  </PARA>
	</DESC>
      </QEXAMPLE>

      <QEXAMPLE>
        <SYNTAX>
          <LINE>
	    &upr; &cltool; 
	    infile=evt2.fits 
	    bkgfile=bsky_particle.fits 
	    bkgout=bkg_sample.fits 
	    regionfile=src.reg 
	    fill_out=filled_evt.fits
	  </LINE>
        </SYNTAX>
        <DESC>
          <PARA>
	    The fill-in-the-hole" use case, the "regionfile" parameter
	    and "fill_out" parameter are of interest, where the
	    filled_evt.fits file is the events file that excludes the
	    sources from the "infile" defined by the "regionfile" and
	    replaces them with the sampled background events in
	    "bkg_out" from the corresponding part of the detector. 
	  </PARA>
	</DESC>
      </QEXAMPLE>
    </QEXAMPLELIST>

    <PARAMLIST>
      <PARAM name="infile" type="file" filetype="input" reqd="yes" stacks="no">
	<SYNOPSIS>
	  The reference event file used to generate a tailored
	  blanksky background.
	</SYNOPSIS>

	<DESC>
	  <PARA>
	    This reference file is typically the observed events file
	    used with the 'blanksky' script to generate the unscaled
	    background events file.  Alternatively, it may be a PSF
	    event file from a ray trace simulation that is based on
	    the observed events file used to generate the background
	    events file. 
	  </PARA>
	</DESC>
      </PARAM>

      <PARAM name="bkgfile" type="file" filetype="input" reqd="yes" stacks="no">
	<SYNOPSIS>
	  Input blanksky background event file.
	</SYNOPSIS>

	<DESC>
	  <PARA>
	    The modified and reprojected blanksky background event file; the 
            output from the "blanksky" script.
	  </PARA>
	</DESC>
      </PARAM>

      <PARAM name="bkgout" type="file" filetype="output" reqd="yes" stacks="no">
	<SYNOPSIS>
	  Output sampled blanksky background events file.
	</SYNOPSIS>
      </PARAM>

      <PARAM name="psf_bkg_out" type="file" filetype="output" reqd="no" stacks="no">
	<SYNOPSIS>
	  Output events file combining the events defined by the "infile"
	  and "bkgout" parameters.  
	</SYNOPSIS>
      </PARAM>

      <PARAM name="regionfile" type="file" filetype="input" reqd="no" stacks="no">
	<SYNOPSIS>
	  CIAO-formatted region file used alongside the "fill_out"
	  parameter of the region(s) in the "infile" to exclude events
	  and be replaced with background events.
	</SYNOPSIS>
      </PARAM>

      <PARAM name="fill_out" type="file" filetype="output" reqd="no" stacks="no">
	<SYNOPSIS>
	  Output event file with "infile" events in the regions
	  defined by "regionfile" and replaced with background events.
	</SYNOPSIS>
      </PARAM>

      <PARAM name="reproject" type="boolean" def="no" reqd="no">
	<SYNOPSIS>
	  Reproject background events to match the infile coordinates.
	</SYNOPSIS>

	<DESC>
	  <PARA>
	    Run reproject_events with 'asolfile' on 'bkgfile' to match
	    the coordinates of 'infile'.  Only set to 'yes' if the
	    blanksky backgound file has not been reprojected.
	  </PARA>
	</DESC>
      </PARAM>

      <PARAM name="asolfile" type="file" filetype="input" reqd="no" stacks="yes">
	<SYNOPSIS>
	  Input aspect solution for events reprojection.
	</SYNOPSIS>

	<DESC>
          <PARA>
            The aspect solution files have names like
            pcadf*_asol1.fits and are included in the
            output directory of the chandra_repro script.
            To explicitly specify the asol files use
            the stack syntax (e.g. a comma, or space, separated
            string or an external file as described in
            <HREF link="https://cxc.harvard.edu/ciao/ahelp/stack.html">"ahelp
            stack"</HREF> for more information).
            So to use asol1.fits, asol2.fits, and asol3.fits you could say
            <EQUATION>asolfile="asol1.fits,asol2.fits,asol3.fits"</EQUATION>
            or
            <EQUATION>asolfile="asol1.fits asol2.fits asol3.fits"</EQUATION>
            or
            <EQUATION>asolfile=@asol.lis</EQUATION>
            where asol.lis contains the names of each file, one per line.
            The files do not have to be given in time order.
          </PARA>
          <PARA>
            Since there may be multiple asol files for an
            observation there may be more entries in this
            parameter than there are in the infiles parameter.
          </PARA>
          <PARA>
            Aspect histograms - the output of the asphist tool -
            cannot be used here. 
          </PARA>
	</DESC>
      </PARAM>

      <PARAM name="tmpdir" type="string" def="${ASCDS_WORK_PATH}">
	<SYNOPSIS>
	  Directory for temporary files.
	</SYNOPSIS>

	<DESC>
	  <PARA>
	    Directory for storing temporary files that require further
	    processing before becoming useful. If the directory does
	    not exist then it will be created for use by the script,
	    and then deleted. 
	  </PARA>
	</DESC>
      </PARAM>

      <PARAM name="random" type="integer" def="0" min="0">
	<SYNOPSIS>
	  Random seed for randomization.
	</SYNOPSIS>

	<DESC>
	  <PARA>
	    The random parameter is sent to reproject_events when
	    processing the ACIS blanksky and HRC-I particle background
	    files to match the observation. A value of 0 uses the
	    system time to seed the random number generator. 
	  </PARA>
	</DESC>
      </PARAM>

      <PARAM name="clobber" type="boolean" def="no" reqd="no">
	<SYNOPSIS>
	  Specifies if an existing output file should be overwritten.
	</SYNOPSIS>
      </PARAM>

      <PARAM name="verbose" type="integer" def="0">
	<SYNOPSIS>
	  Specifies the level of verbosity (0-5) in displaying
	  diagnostic messages.
	</SYNOPSIS>
      </PARAM>
    </PARAMLIST>

    <ADESC title="Determining background scaling factor for an observation">
      <PARA>
        The background scaling method and factor are stored in the
        BKGMETH and BKGSCALE/BKGSCALn header keywords in the tailored blanksky
        background file, each BKGSCALn value corresponds to a specific
        chip.  These scaling values may be used to weigh FITS image
        files, on a per chip basis for an observation. 
      </PARA>

      <PARA>
        When scaling by time, the ratio of the observation to blanksky
        files' LIVTIMEn keywords are calculated.  
      </PARA>

      <PARA>
        The basis for scaling by the high-energy particle background is describe
d
        in <HREF link="http://adsabs.harvard.edu/abs/2006ApJ...645...95H">"Absol
ute
        Measurement of the Unresolved Cosmic X-Ray Background in the
        0.5-8 keV Band with Chandra" (Hickox &amp; Markevitch, ApJ 645
        95)</HREF>.  The calculation of the factors are done by taking the
        ratio of the counts in the observation to the blanksky
        background for each chip in a defined hard energy band (the
        "bkgparams" parameter in the "blanksky" script).  
      </PARA>
    </ADESC>

    <ADESC title="About Contributed Software">
      <PARA>
        This script is not an official part of the CIAO release but is
        made available as "contributed" software via the
        <HREF link="https://cxc.harvard.edu/ciao/download/scripts/">CIAO scripts page</HREF>.
        Please see this page for installation instructions - such as how to
        ensure that the parameter file is available.
      </PARA>
    </ADESC>

    <ADESC title="Changes in the July 2021 Release">
      <PARA>
	Incorporated deadtime correction from reference observation to
	better bound the time range the randomly sampled time values
	assigned to the blanksky events. 
      </PARA>
    </ADESC>


<!--//    
    <BUGS>
      <PARA>
        See the
        <HREF link="https://cxc.harvard.edu/ciao/bugs/&cltool;.html">bugs page
        for this script</HREF> on the CIAO website for an up-to-date
        listing of known bugs. 
      </PARA>
    </BUGS>
//-->    
    <LASTMODIFIED>July 2021</LASTMODIFIED>
  </ENTRY>
</cxchelptopics>
