    
# 
#  Copyright (C) 2004-2023  Smithsonian Astrophysical Observatory
#
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write to the Free Software Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#


    
# Image processing tasks
    
    
# ---------------
# dmimgblob
# ---------------
param blob
  threshold entry {threshold } 1 {Connect pixels >= this value}
endparam

# ---------------
# dmimgadapt
# ---------------
param ciaoadapt
  function menu  {function} gaussian|tophat|box|cone|pyramid|hemisphere|quad|exp|lor|walrewop {Smoothing kernel}
  counts   entry {counts} 16 {Number of counts under kernel}
  minrad   entry {minrad} 0.5 {Min. kernel radii}
  maxrad   entry {maxrad} 15.0 {Max. kernel radii}
  numrad   entry {numrad} 30 {Nuber of kernel radii}
  radstep  menu  {radstep} log|linear {Spacing between radii}
endparam

# ---------------
# dmimgfilt
# ---------------
param filt
  function menu  {function} median|extreme|kuwahara|locheq|max|mcv|mean|min|mid|mode|nmode|peak|ridge|q10|q25|q33|q67|q75|q90|range|rclip|sigma|sum|unsharp|valley|plain|variance|count|olympic|pmean|jitter {Filter function}
  mask entry {mask} {} {Region mask}
  niter entry {niter} 1 {Number of iterations}
endparam

# ---------------
# dmimgthresh
# ---------------
param threshold
  cut entry {cut} {} {Threshold cutoff}
  thr_value entry {value} {} {Replacement value}
endparam


# ---------------
# dmimggrad
# ---------------
param grad
  grad menu {gradient} laplace|roberts|prewitt|sobel|robison|kirsch  {Gradient estimator}
  graddir menu {value} mag|x|y|angle {Gradient direction}
endparam

# ---------------
# dmnautilus
# ---------------
param bin
  snr entry {SNR} 5 {Signal-to-noise value to bin}
  nautilus_method menu {Method} 0|1|2|3|4 {Number of quadrants required to be above SNR, 0: all must be below}
endparam


# ---------------
# aconvolve
# ---------------
param convolve
  smker menu {Smoothing Kernel} gaus|tophat|box|mexhat|sinc|power|exp|beta|cone|pyramid|sphere
  xxsig entry {x-width} 3 {X-size}
  zoobar entry {y-width} 3 {Y-size}
  speed menu {Convolution type} slide|fft
endparam


#
# Period Fold
#
param time
  min_time entry {Minimum Period} 1
  max_time entry {Maximum Period} 1000
endparam

#
# lasso
#
param lasso
  min_pix entry {Minimum pixel value} 1.0
  max_pix entry {Maximum pixel value} INDEF
endparam

#
# project
#
param project
  axis menu {Which axis to project onto?} x|y
  stat menu {which statistic to compute?} sum|number|mean|min|min_loc|max|max_loc|median|med_loc|range|stdev
endparam

param poly_params
  poly_method menu {Weighting} closest|average|weight|minimum|maximum|furthest {Interpolation method} 
  poly_plot menu {Plot X-axis} x|y|angle|radius|rownum {What to plot data versus}
endparam


#
# ellipse
#
param myell
  ellipse_frac entry {Fraction(s) to compute} 0.9
endparam

param regions
  minval entry {Value below which to exclude} 0
endparam



#
# dmfilth
#
param filth
  fillmeth menu {Interpolation Method} POISSON|POLY|DIST|GLOBAL
endparam

param histogram
  bincol entry {Column to bin} 
  binspec entry {Binning specification}
endparam


param csmooth
  sclmin entry {Minimum smoothing scale} INDEF
  sclmax entry {Maximum smoothing scale} INDEF
  sigmin entry {Minimum significance } 3
  sigmax entry {Maximum significance } 5
  kernel menu { Smoothing kernel} gauss|tophat
endparam


param psfsize
  energy entry {Energy} 1.5 {keV}
  frac   entry {PSF Fraction} 0.95 {0.0 to 1.0}
endparam


param psffrac
  fenergy entry {Energy} 1.5 {keV}
endparam

###param colden
###  miss menu {Data source} nrao|bell {blah}
###endparam


param spectral
  model menu {Model: mdl1} powlaw1d|bbody|bpl1d|gauss1d|normgauss1d|lorentz1d|logparabola|xszpowerlw|xszbbody|xsbknpower|xscutoffpl|xszgauss|xsdiskline|xsapec|xsbapec|xsmekal|xsvmekal|xsraymond|xszbremss|xscemekl {Spectral Model - model editor will open}
  add_model menu {Additional component: mdl2} none|powlaw1d|bbody|bpl1d|gauss1d|normgauss1d|lorentz1d|logparabola|xszpowerlw|xszbbody|xsbknpower|xscutoffpl|xszgauss|xsdiskline|xsapec|xsbapec|xsmekal|xsvmekal|xsraymond|xszbremss|xscemekl {Added to mdl1 - model editor will open}
  specfit_absmodel menu {Absorption model: abs1} xsphabs|xswabs|xstbabs|xszwabs|xszphabs|xsztbabs {Absorption model - model editor will open}
  specfit_absxtra menu {2nd Absorption model: abs2} none|xsphabs|xswabs|xstbabs|xszwabs|xszphabs|xsztbabs {Absorption model - model editor will open}
  grpcts entry {grpcts} 20 {Group channels by number of counts}
  elo entry {elo} 0.3 {[keV] Lower energy range to perform fit}
  ehi entry {ehi} 7.0 {[keV] Upper energy range to perform fit}
  extra entry {extra} {} {Additional commands, eg sherpa.set_xsabund("angr")}
  specfit_method menu {Method} levmar|neldermead|moncar {Optimization method}
  specfit_stat menu {Statistic} chi2gehrels|chi2xspecvar|cash|cstat|wstat {Goodness of fit statistic}
endparam

param imagefit
  img_mdl1 menu {Model 1} gauss2d|beta2d|devaucouleurs2d|lorentz2d|const2d|polynom2d|sigmagauss2d|sersic2d|scale2d|normgauss2d {First model component}
  img_mdl2 menu {Model 2} const2d|none|polynom2d|gauss2d|beta2d|devaucouleurs2d|lorentz2d|sigmagauss2d|sersic2d|scale2d|normgauss2d {Second model component}
  img_psf open {PSF} {} {PSF file name}
  img_exp open {Exposure Map} {} {Exposure map file name}
  imgfit_method menu {Method} levmar|neldermead|moncar {Optimization method}
  imgfit_stat menu {Statistic} chi2gehrels|chi2xspecvar|cash|cstat|wstat {Goodness of fit statistic}
endparam


param rproffit
   rprof_units menu {Units} physical|arcsec {Display radius in which units?}
   rprof_srcA menu {Model1} gauss1d|beta1d|const1d|lorentz1d|polynom1d|powlaw1d {First model component}
   rprof_srcB menu {Model2} none|gauss1d|beta1d|const1d|lorentz1d|polynom1d|powlaw1d {2nd additive model component}
   rprof_mthd menu {Method} levmar|neldermead|moncar {Optimization method}
endparam


param srcflux
  energy entry {Energy band} default {CSC bands or values in keV}
  model entry {Model definition} "xspowerlaw.pow1" {Sherpa model expression}
  pmvals entry {Model parameters} "pow1.PhoIndex=2.0" {Sherpa model parameters}
  absmodel entry {Absorption model} "xsphabs.abs1" {Sherpa model expression}
  apmvals entry {Absorption parameters} abs1.nH=0.0 {Sherpa model parameters}
  psfmethod menu {PSF Method} arfcorr|ideal|quick|marx {How to account for PSF fraction}
endparam

param dl_obsid
  dlobi entry {Chandra OBS_ID} {} {only public OBS_IDs are accessible}
  dldir entry {Download directory} {./} {default will download to directory where ds9 was launched.}
  dlview menu {Load evt2 file?} {yes|no}
endparam  


param dl_csc
  dlobi entry {Chandra OBS_ID} {} {only public OBS_IDs are accessible}
  dldir entry {Download directory} {./} {default will download to directory where ds9 was launched.}
  dlview menu {Load catalog?} {yes|no}
endparam  


param radial_profile
   rad_units menu {Units for Radial Profile} physical|arcsec
endparam

param contour_lvs
   c_levels entry {Contour Levels} {} {List of contour levels}
endparam


param tgcoords
    tgenergy entry {Energy} {} {Locate sky coordinate for what energy [kev]}
    tg_m entry {Order} {} {For which grating order -8..-1, 1..8}
endparam


param regrid2
    rd_xoff entry {X Offset} {0.0} {pixels to shift in +X direction}
    rd_yoff entry {Y Offset} {0.0} {pixels to shift in +Y direction}
    rd_rot  entry {Rotate} {0.0} {degrees to rotate about +X axis}
    rd_xscl entry {X Scale} {1.0} {scaling applied to X axis}
    rd_yscl entry {Y Scale} {1.0} {scaling applied to Y axis}
    rd_xcen entry {X center} {INDEF} {center of X-axis, INDEF: len(x)/2}
    rd_ycen entry {Y center} {INDEF} {center of Y-axis, INDEF: len(y)/2}
    rd_mthd menu {Normalization} {sum|average} {sum: preserve flux, average: preserve mean value}
endparam

param reprojectimg
    rimgmeth menu {Method} {sum|average} {sum: preserve flux, average: preserve mean value}
    rimgcoords menu {Coordinates} {world|physical|image} {Which coordinate system to use?}
endparam

param celldetect
    cell_expmap open {Exposure map} {} {Exposure map file name, leave blank for none}
    cell_psfmap open {PSF map} {} {PSF map file name, leave blank for none} 
    cell_sig entry {Sigma Threshold} {3} {SNR threshold for sources}
    cell_size entry {Fixed cell size} {0} {Fixed cell size. 0 : use psfmap}
endparam

param wavdetect
    wav_scales entry {Wavelet scales} {1.4,2,4,8} {Wavelet scales}
    wav_expmap open {Exposure map} {} {Exposure map file name, leave blank for none}
    wav_psfmap open {PSF map} {} {PSF map file name, leave blank for none} 
    wav_sig entry {Sig. Threshold} {1e-06} {Significance threshold (false positives per pixel)}
endparam

param vtp
    vtp_expmap open {Exposure map} {} {Exposure map file name, leave blank for none}
    vtp_scale entry {Scale} {1} {Threshold scale factor}
    vtp_limit entry {Limit} {1.0e-6} {Max. probability of being a false source}
endparam

param simpsf
    sim_eng entry {Energy} {1.0} {keV, Mochromatic energy for simulation}
    sim_flux entry {Flux} {1.0e-4} {photon/cm^2/sec, Photon flux}
    sim_blur entry {Blur} {0.07} {arcsec, Gaussian blur added to PSF}
    sim_iter entry {Iterations} {1} {Number of iterations to combine}
    sim_streak checkbox {Readout Streak} 0 {Simulate ACIS readout streak?}
    sim_pileup checkbox {Pileup} 0 {Simulate ACIS pileup?}
    sim_ideal checkbox {Ideal} 1 {Simulate ideal detectors?}
    sim_extd checkbox {Off Chip} 1 {Simulate PSF off detector?}
endparam


param lutclrs
    lutclr1 entry {First color} {black} {Color by name or hex value}
    lutclr2 entry {Next color} {cadetblue} {Color by name or hex value}
    lutclr3 entry {Next color} {white} {Color by name or hex value}
    lutclr4 entry {Next color} {} {Color by name or hex value}
    lutclr5 entry {Next color} {} {Color by name or hex value}
    lutclr6 entry {Next color} {} {Color by name or hex value}
    lutnum entry {Number of colors} {256} {Number of colors in lookup table}
    lutsys menu {Color System} {rgb|hsv|hls} {Interpolate colors in which color system?}
endparam


param dmradar
    rad_snr entry {SNR} {5} {Signal to Noise ratio limit}
    rad_xcen entry {X Center} {} {X coordinate of center of grid (physical pixels)}
    rad_ycen entry {Y Center} {} {Y coordinate of center of grid (physical pixels)}
    rad_meth menu {Method} 0|1|2|3|4 {Number of subimages required to be above SNR threshold, 0=all below}
    rad_shape menu {Shape} pie|epanda|bpanda|box {Shape of region to use}
    rad_in entry {Inner Radius} {5} {Minimum inner radius, (physical pixels), major axis}
    rad_out entry {Outer Radius} {1000} {Outer radius range, (physical pixels), major axis}
    rad_start entry {Start Angle} {0} {Starting angle, degrees CCW +X axis}
    rad_range entry {Angle Range} {360} {Range of angles, degrees CCW from astart}
    rad_ell entry {Ellipticity} {1} {Ellipticity of shape (1=circle,0=line)}
    rad_rot entry {Rotation Angle} {0} {Rotation anble of shape}
    rad_radmin entry {Minimum Radius} {0.5} {Minimum radius size when dividing, phys pixels}
    rad_angmin entry {Minimum Angle} {1} {Minimum angle when dividing (deg)}
endparam


param psfcontour
    pc_method menu {Method} {contour|lasso|fitted_ellipse|ecf_ellipse|convex_hull} {Region creating method}
    pc_energy entry {Energy} {1.0} {Monochromatic energy at which simulate the PSF, keV}
    pc_fraction entry {Fraction} {0.9} {Target fraction of the PSF to enclose}
    pc_fov open {FOV File} {} {Field of view filename, leave blank to omit FOV}
endparam


param bkgcounts
    bc_min_counts entry {Counts} {10} {Minimum number of counts in region}
    bc_fov open {FOV File} {} {Field of view filename, leave blank to omit FOV}
    bc_inner entry {Inner ECF} {0.95} {PSF ECF for inner annulus radius}
    bc_energy entry {Energy} {1.0} {Energy for PSF ECF lookup, keV}
    bc_max entry {Maximum Radius} {INDEF} {Maximum background radius, INDEF=unrestricted}
    bc_src entry {Source Regions} {} {Input stack of source regions}
endparam

param srcextent
    makepsf checkbox {Simulate PSF?} {1} {Chandra Only. Simulate PSF to determine intrinsic source size}
    se_mono_e entry {Energy} {1.0} {Energy for PSF simulation}
endparam


#
# New in ds9 8.4 -- put some dax tasks on the button bar

buttonbar
    Statistics (dmstat)
    *
    button
    ds9_imgproc_wrapper $xpa_method dmstat |& $text

    Net Counts
    *
    button
    ds9_imgproc_wrapper $xpa_method functs  |& $text

    Photometry (srcflux)
    *EVT* *evt*
    button
    $param(srcflux); ds9_imgproc_wrapper $xpa_method srcflux "$energy" "$model" "$pmvals" "$absmodel" "$apmvals" "$psfmethod" |& $text

    Chandra Coordinates
    *
    button
    ds9_imgproc_wrapper $xpa_method dmcoords |& $text

    Spectral Fit
    *EVT* *evt*
    button
    $param(spectral); ds9_specfit.sh $xpa_method $model $add_model $grpcts $elo $ehi $specfit_method $specfit_stat $specfit_absmodel $specfit_absxtra '$extra' |& $text

    2D Image Fit
    *
    button
    $param(imagefit); ds9_imgfit.sh $xpa_method $img_mdl1 $img_mdl2 x$img_psf x$img_exp $imgfit_method $imgfit_stat |& $text

    Source Fill
    *
    button
    $param(filth); ds9_imgproc_wrapper $xpa_method dmfilth $fillmeth |& $text
endbuttonbar


# ------------------------------------------------------


hmenu CIAO tools (DAX)

#NEW#  hmenu Archive
#NEW#
#NEW#    Download Chandra OBS_ID
#NEW#    *
#NEW#    menu
#NEW#    $param(dl_obsid); ds9_dl_obsid.sh $xpa_method $dlobi $dldir $dlview  |& $text
#NEW#
#NEW#    CSC By OBS_ID
#NEW#    *
#NEW#    menu
#NEW#    $param(dl_csc); ds9_dl_csc.sh $xpa_method $dlobi $dldir $dlview  |& $text
#NEW#
#NEW#  endhmenu
#NEW#  
#NEW#  ---

  find chandra obsid
  *
  bind o
  find_chandra_obsid "$x(wcs,sexagesimal)" "$y(wcs,sexagesimal)" | $text

  hmenu Count Rates and Fluxes

    Net Counts
    *
    menu
    ds9_imgproc_wrapper $xpa_method functs  |& $text

    Photometry (srcflux)
    *EVT* *evt*
    menu
    $param(srcflux); ds9_imgproc_wrapper $xpa_method srcflux "$energy" "$model" "$pmvals" "$absmodel" "$apmvals" "$psfmethod" |& $text

    ---

    help


    Net Counts - [dmextract] computes simple net counts, and count-rates 
    
    Photometry - [srcflux]  computes photon and energy fluxes assuming 
    a user specified spectral model.

    endhelp
    
    
  endhmenu
 
  ---

  hmenu Statistics

    centroid snap selected
    *
    bind F1
    $data | ds9_snap2.sh $xpa_method |& $text

    Statistics (dmstat)
    *
    menu
    ds9_imgproc_wrapper $xpa_method dmstat |& $text
       
    Moments
    *
    menu
    ds9_imgproc_wrapper $xpa_method imgmoment  |& $text

    Source Extent
    *
    menu
    $param(srcextent); ds9_imgproc_wrapper $xpa_method srcextent $makepsf $se_mono_e|& $text

    
    ---
    
    help

    Statistics - [dmstat]  compute various image pixel statistics: 
    centroid, min, max, mean, median, standard deviation, sum, and area.

    moments - [imgmoment] computes the 2nd order image moments and some 
    derived values such as ellipticity, major and minor axes, and rotation 
    angle. 

    
    endhelp
    
    
  endhmenu
    
  ---
    
  hmenu Histograms

    Arbitrary Column Histogram
    *evt* *EVT*
    menu
    $param(histogram); ds9_imgproc_wrapper $xpa_method dme_generic $bincol $binspec |& $text

    --- 

    Spectrum (PI)
    *evt* *EVT*
    menu
    ds9_imgproc_wrapper $xpa_method dme_pi |& $text

    Spectrum (PHA) 
    *evt* *EVT*
    menu
    ds9_imgproc_wrapper $xpa_method dme_pha  |& $text

    Lightcurve (Time)
    *evt* *EVT*
    menu
    ds9_imgproc_wrapper $xpa_method dme_time "$entry(Bin size)" |& $text


    Lightcurve (Exposure Number)
    *evt* *EVT*
    menu
    ds9_imgproc_wrapper $xpa_method dme_expno "$entry(Expno Bin Size)" |& $text

    ---
    
    Pixel
    *
    menu
    ds9_imgproc_wrapper $xpa_method dmimghist |& $text

    Project
    *
    menu
    $param(project); ds9_imgproc_wrapper $xpa_method dmimgproject $stat $axis |& $text

    Radial Profile
    *
    menu
    $param(radial_profile); ds9_imgproc_wrapper $xpa_method dmextract $rad_units|& $text

    Enclosed Counts Fraction
    *
    menu
    ds9_imgproc_wrapper $xpa_method ecf_calc "default" |& $text

    Extract Along Polygon
    *
    menu
    $param(poly_params); ds9_imgproc_wrapper $xpa_method dmimgpick $poly_method $poly_plot |& $text
    
    
    ---
    
    Period Fold
    *evt* *EVT*
    menu
    $param(time); ds9_imgproc_wrapper $xpa_method pfold $min_time $max_time  |& $text

    Gregory-Loredo Lightcurve
    *evt* *EVT*
    menu
    ds9_imgproc_wrapper $xpa_method glvary |& $text

    ---

    Dither Region
    *
    menu
    ds9_imgproc_wrapper $xpa_method dither_region |& $text

    ---

    help

       Generic Histogram - [dmextract] extracts histogram for an arbitrary column.

       PHA - [dmextract] extract spectrum in PHA channels using 1:4096:4

       PI - [dmextract] extract spectrum in PI (calibrated) channels using 1:1024:1

       TIME - [dmextract] extract light curve with user specified time-bin

       EXPNO - [dmextract] extract light curve for ACIS data using exposure number

       Pixel - [dmimghist] compute histogram of pixel values in region

       Project - [dmimgproject] compute projections of data in region onto X or Y axes

       Radial Profile - [dmextract] compute surface brightness 

       Extract Along Polygon - [dmimgpick] get pixel values at polygon end points

       Period Fold - [pfold] a simple period fold search

       G-L Vary - [glvary] Gregory-Laredo Bayesian Lightcurve
       
       Dither Region - [dither_region] computes the fraction of the 
          region area exposed. (Chandra Only).

    endhelp



  endhmenu
    
  ---
    
  hmenu Coordinates
    
    Chandra Coordinates
    *
    menu
    ds9_imgproc_wrapper $xpa_method dmcoords |& $text


    Chandra Field-of-View
    *evt* *EVT*
    menu
    ds9_imgproc_wrapper $xpa_method skyfov |& $text


    Chandra Grating Energy Lookup
    *
    menu
    $param(tgcoords); ds9_tgcoord.sh $xpa_method $tgenergy $tg_m |& $text


    Interactive Grating Coordinates Vector
    *
    menu
    ds9_itgcoords_launch $xpa_method |& $text



##    ---
##
##    Colden
##    *
##    menu
##    $param(colden); prop_colden data $miss eval $x(fk5,sexagesimal) $y(fk5,sexagesimal) |& $text

  ---
    
    help

    Chandra Coordinates - [dmcoords] computes various Chandra specific coordinates
    (chip, det, tdet, off-axis-angles) at the location of the 
    crosshair, or the 1st selected region.
    
    Chandra Field-of-View - [skyfov] computes a polygon enclosing
    each CCD.

    Chandra Grating Energy Lookup - [dmcoords] show where the dispersed 
    energy+order will be imaged using the zero order position taken from
    the location of the crosshair or the 1st selected region

    Interactive Grating Coordinates Vector - when this task is invoked
    it draw a vector with the non-arrow end point located at the grating
    0th order location.  As the user moves the arrow end point around,
    a dialogue will open that provides the grating coordinates and energy.
    For HETG observations it will pick the grating arm , HEG or MEG, 
    closest to the end point.  Users can change the order by typing it
    into the dialogue and pressing Enter.
    
    endhelp
    
    
    
  endhmenu
    
    
  ---
    
  hmenu Detect
    
    wavdetect
    *
    menu
    $param(wavdetect); ds9_imgproc_wrapper $xpa_method wavdetect "$wav_scales" e"$wav_expmap" p"$wav_psfmap" $wav_sig |& $text


    celldetect
    *
    menu
    $param(celldetect); ds9_imgproc_wrapper $xpa_method celldetect $cell_size e"$cell_expmap" p"$cell_psfmap" $cell_sig |& $text

    vtpdetect
    *
    menu
    $param(vtp); ds9_imgproc_wrapper $xpa_method vtpdetect e"$vtp_expmap" $vtp_scale $vtp_limit |& $text
    
    get_src_region
    *
    menu
    ds9_imgproc_wrapper $xpa_method get_src_region  |& $text
    
    ---
    
    help

    wavdetect - [wavdetect] uses a Marr wavelet detection algorithm.
    User inputs the list of wavelet scales to search; values are typically
    powers of 2.
    
    celldetect - [celldetect] a simple sliding cell source detection.
    User inputs the detect cell size (must be an integer multiple of 3).
    
    vtpdetect - [vtpdetect] source detect using Voronoi Tesselation and 
    Percolation; useful to find faint diffuse emission.
    
    get_src_region - [get_src_region] a fast algorithm to identify 
    pixels above background.

    
    endhelp
   
  endhmenu

  ---
    
  hmenu Regions

    Lasso
    *
    menu
    $param(lasso); ds9_imgproc_wrapper $xpa_method dmimglasso $min_pix $max_pix |& $text
    
    Contour
    *
    menu
    $param(contour_lvs); ds9_imgproc_wrapper $xpa_method dmcontour $c_levels |& $text

    
    ---
    
    Ellipse
    *
    menu
    $param(myell); ds9_imgproc_wrapper $xpa_method dmellipse "$ellipse_frac" ellipse |& $text

    Rotbox
    *
    menu
    $param(myell); ds9_imgproc_wrapper $xpa_method dmellipse "$ellipse_frac" rotbox |& $text
    
    ---

    Convex Hull
    *
    menu
    $param(regions); ds9_imgproc_wrapper $xpa_method dmimghull "$minval" |& $text


    ---

    # The background is restricted to evt files, so I'll do the same for
    # src region here too.
    
    PSF Contour
    *evt* *EVT*
    menu
    $param(psfcontour); ds9_imgproc_wrapper $xpa_method psf_contour $pc_method $pc_energy $pc_fraction "$pc_fov" |& $text

    Fixed Counts Backgrounds
    *evt* *EVT*
    menu
    $param(bkgcounts); ds9_imgproc_wrapper $xpa_method bkg_fixed_counts $bc_min_counts "$bc_fov" $bc_inner $bc_energy $bc_max "$bc_src" |& $text


   
    ---
    
    help
    
    Lasso - [dmimglasso] (crosshair mode only) create a region that
    encloses the current crosshair location with pixel in specified 
    range of values.
    
    Contour - [dmcontour] create contour regions at specified levels.  
    Interior regions (ie holes) will be automatically excluded.
    
    Ellipse - [dmellipse] find ellipse that encloses a fraction 
    of the total flux.
    
    Rotbox - [dmellipse] find a rotated box that encloses a fraction 
    of the total flux.
    
    Convex Hull - [dmimghull] computes the convex hull around the
    pixels in region above the threshold.
    
    PSF Contour - [psf_contour] simulate the PSF at the selected region
    positions (or all position if non are selected) and generates a region
    the encloses the specified fraction of the PSF.
    
    Fixed Counts Background - [bkg_fixed_counts] will generate a background
    annulus at each selected source position (or all if none are selected). 
    The inner annulus radius is determined to exclude a fraction of the PSF
    and the outer radius is selected to enclose the total number of counts,
    which excluding any overlapping regions.
    
    endhelp
    
  endhmenu
    
  ---

  hmenu Chandra PSF
    
    PSF Size
    *
    menu
    $param(psfsize); ds9_imgproc_wrapper $xpa_method psfsize_srcs $energy $frac |& $text

    PSF Fraction
    *
    menu
    $param(psffrac); ds9_imgproc_wrapper $xpa_method src_psffrac $fenergy |& $text


    Simulate PSF with MARX
    *
    menu
    $param(simpsf); ds9_imgproc_wrapper $xpa_method simulate_psf $sim_eng $sim_flux $sim_blur $sim_iter $sim_streak $sim_pileup $sim_ideal $sim_extd |& $text


###    SAOTrace PSF Simulation
###    *EVT* *evt*
###    menu
###    ds9_saotrace.sh $xpa_method |& $text

    help

    PSF Size - [] Creates a circular region as the current location
    that encloses the specified fraction at the specified energy.
    
    PSF Fraction - (circles only) computes the fraction of the PSF
    inside the current circle at the specified energy.    

    Simulate PSF with MARX [simulate_psf] - simulates monochromatic PSF
    using MARX. Uses crosshair location or selected source region.
    
    endhelp
  
  
  endhmenu



  ---

  hmenu Sherpa

    Spectral Fit
    *EVT* *evt*
    menu
    $param(spectral); ds9_specfit.sh $xpa_method $model $add_model $grpcts $elo $ehi $specfit_method $specfit_stat $specfit_absmodel $specfit_absxtra '$extra' |& $text
 
    ---

    2D Image Fit
    *
    menu
    $param(imagefit); ds9_imgfit.sh $xpa_method $img_mdl1 $img_mdl2 x$img_psf x$img_exp $imgfit_method $imgfit_stat |& $text

#NEW#    Source Extent
#NEW#    *
#NEW#    menu
#NEW#    ds9_extent "$filename" "$regions(ciao,strip)" |& $text


     ---
     
     Radial Profile Fit
     *
     menu
     $param(rproffit); ds9_radial_fit $xpa_method $rprof_units $rprof_srcA $rprof_srcB $rprof_mthd |& $text


     ---
     
      help
      
      Spectral Fit - [specextract, sherpa] extracts the source
      and background spectra and then fits the spectra with sherpa.  

            Model       Description:

            xszbbody    Black Body              
            xszpowerlw  Power Law               
            xsbknpower  Broken Pow Law          
            xscutoffpl  Pow Law w/ cutoff       
            xszgauss    Gaussian                
            xsdiskline  Disk Line Emission      
            xsapec      APEC                    
            xsbapec     BAPEC                   
            xsmekal     Mekal                   
            xsvmekal    Mekal (abund)           
            xsraymond   Raymond-Smith           
            xszbremss   Thermal Brems           
            xscemekl    Multi-temp Plasma       


      
      2D Image Fit - [sherpa] fit the image data inside
      the region with a 2D model
      
      Radial Profile Fit - [dmextract, sherpa] extract a 
      radial profile from source and background region and fit.
      
      endhelp


  endhmenu
 


  ---
    
  hmenu Image Processing
    
    
    Blob
    *
    menu
    $param(blob); ds9_imgproc_wrapper $xpa_method dmimgblob $threshold |& $text
    
    Adaptive Smooth
    *
    menu
    $param(ciaoadapt); ds9_imgproc_wrapper $xpa_method dmimgadapt $function $minrad $maxrad $numrad $radstep $counts |& $text

    Csmooth
    *
    menu
    $param(csmooth); ds9_imgproc_wrapper $xpa_method csmooth $kernel $sigmin $sigmax $sclmin $sclmax |& $text
    
    Non-Linear Filter
    *
    menu
    $param(filt); ds9_imgproc_wrapper $xpa_method dmimgfilt $function $mask $niter |& $text
    
    
    Threshold
    *
    menu
    $param(threshold); ds9_imgproc_wrapper $xpa_method dmimgthresh $cut $thr_value |& $text
    
#    Gradient
#    *
#    menu
#    $param(grad); ds9_imgproc_wrapper $xpa_method dmimggrad $grad $graddir |& $text
    
    Adaptive Bin
    *
    menu
    $param(bin); ds9_imgproc_wrapper $xpa_method dmnautilus $snr $nautilus_method |& $text

    Adaptive Bin (Radial)
    *
    menu
    $param(dmradar); ds9_imgproc_wrapper $xpa_method dmradar $rad_snr $rad_xcen $rad_ycen $rad_meth $rad_shape $rad_in $rad_out $rad_start $rad_range $rad_ell $rad_rot $rad_radmin $rad_angmin |& $text
    
    Distance Transform
    *
    menu
    ds9_imgproc_wrapper $xpa_method dmimgdist |& $text

    Richardson Lucy Deconvolution
    *
    menu
    ds9_imgproc_wrapper $xpa_method arestore |& $text

    
    ---
    
    Smoothing
    *
    menu
    $param(convolve); ds9_imgproc_wrapper $xpa_method aconvolve $smker $xxsig $zoobar $speed |& $text
    
    ---
    
    Source Fill
    *
    menu
    $param(filth); ds9_imgproc_wrapper $xpa_method dmfilth $fillmeth |& $text
    

    ---

    Crop
    *
    menu
    ds9_imgproc_wrapper $xpa_method dmcopy |& $text

    Regrid
    *
    menu
    $param(regrid2); ds9_imgproc_wrapper $xpa_method dmregrid2 $rd_xoff $rd_yoff $rd_rot $rd_xscl $rd_yscl $rd_xcen $rd_ycen $rd_mthd |& $text

    Reproject (current to match previous)
    *
    menu
    $param(reprojectimg); ds9_imgproc_wrapper $xpa_method reproject_image $rimgmeth $rimgcoords |& $text

    ---
    Powerspectrum
    *
    menu
    ds9_imgproc_wrapper $xpa_method apowerspectrum |& $text

    Autocorrelate
    *
    menu
    ds9_imgproc_wrapper $xpa_method acrosscorr_auto |& $text
    
    Cross Correlate with previous frame
    *
    menu
    ds9_imgproc_wrapper $xpa_method acrosscorr_x |& $text

    ---
    help
    
    Various image processing tasks

      Blob - [dmimgblob] group pixels > threshold together. Output is a mask with
	  disjoint groups identified.  Best with smoothed images

      Adaptive Smooth - [dmimgadapt] yet another adaptive smoothing algorithm that
          works to preserve photometry

      Csmooth - [csmooth] runs the CIAO tool of the same name

      Apply Non-Linear Filters - [dmimgfilt] apply various non-linear filters to image

      Threshold - [dmimgthresh] replace values above/below threshold with constant

      Adaptive Bin - [dmnautilus] quad-tree algorithm to group pixels together until
	     the SNR of the group drops below threshold

      Distance Transform - [dmimgdist] computes the distance from each pixel to 
          the closest edge (where edge is pixels below threshold)
      
      Richardson Lucy Deconvolution - [arestore] Lucy Richardson deconvolution; draw a region around
	     what is believed to be a point source and it is used as the PSF.

      Smoothing - [aconvolve] additional smoothing kernels and non circularly symetric smoothing.

      Source Fill - [dmfilth] draw regions for source and background; group them together
     	and then will use background to replace pixels in the source region.

      Regrid - [dmregrid2] allows users to apply a non-integer pixel shift
         to the image pixels, apply scaling factor separately to the X
         and Y axes, and rotate the image about an arbitrary center.

      Reproject - [reproject_image] reprojects the current frame to the
         same coordinate system and grid in the previous frame.  
         Use method=sum to preserve flux (pixels may not remain integers)
         or method=average to preserve the mean value (eg when reprojecting
         exposure maps or psfmaps).

      Powerspectrum - [apowerspectrum] compute |FFT| of image

      Autocorrelate - [acrosscorr] compute correlation of image with itself     

      Cross Correlate - [acrosscorr] compute correlation of the current image with the
          image in the previous frame. Images should be on same tangent plane (use
          Reproject task before hand if necessary).
    
    endhelp
    
    
  endhmenu

  ---
  
  hmenu Image Calculator
  
      ADD: previous frame to current frame (c+p)
      *
      menu
      ds9_imgproc_wrapper $xpa_method dmimgcalc add |& $text
  
      SUB1: subtract previous frame from current (c-p)
      *
      menu
      ds9_imgproc_wrapper $xpa_method dmimgcalc sub_c-p |& $text

      SUB2: subtract current frame from previous (p-c)
      *
      menu
      ds9_imgproc_wrapper $xpa_method dmimgcalc sub_p-c |& $text

      MUL: multiply current and previous frame (c*p)
      *
      menu
      ds9_imgproc_wrapper $xpa_method dmimgcalc mul |& $text

      DIV1: divide current frame by previous (c/p)
      *
      menu
      ds9_imgproc_wrapper $xpa_method dmimgcalc div_c/p |& $text

      DIV2: divide previous frame by current (p/c)
      *
      menu
      ds9_imgproc_wrapper $xpa_method dmimgcalc div_p/c |& $text

      ---
      
      Constant scale (c*n)
      *
      menu
      ds9_imgproc_wrapper $xpa_method dmimgcalc scale "$entry(Multiplicative Scaling Factor)" |& $text

      Constant offset (c+n)
      *
      menu
      ds9_imgproc_wrapper $xpa_method dmimgcalc offset "$entry(Additive Offset)" |& $text

      Power (c^n)
      *
      menu
      ds9_imgproc_wrapper $xpa_method dmimgcalc pow "$entry(Power Exponent)" |& $text
      
      Modulo (c%n)
      *
      menu
      ds9_imgproc_wrapper $xpa_method dmimgcalc mod "$entry(Modulo)" |& $text

      ---

      hmenu Scaling Functions

        acos
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc acos |& $text

        acosh
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc acosh |& $text

        asin
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc asin |& $text

        asinh
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc asinh |& $text

        atan
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc atan |& $text

        atanh
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc atanh |& $text

        ceil
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc ceil |& $text

        cos
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc cos |& $text

        cosh
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc cosh |& $text

        erf
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc erf |& $text

        erfc
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc erfc |& $text

        exp
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc exp |& $text

        fabs
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc fabs |& $text

        floor
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc floor |& $text

        gamma
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc gamma |& $text

        lgamma
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc lgamma |& $text

        ln
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc ln |& $text

        log
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc log |& $text

        sin
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc sin |& $text

        sinh
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc sinh |& $text

        sqrt
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc sqrt |& $text

        tan
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc tan |& $text

        tanh
        *
        menu
        ds9_imgproc_wrapper $xpa_method dmimgcalc tanh |& $text

   
      endhmenu


  endhmenu
  

  ---
  Custom DAX output directory
  *
  menu
  xpaset -p $xpa_method tcl "{ChangeDaxOutdir}" | $text
    
  ---

  Custom Color Map
  *
  menu
  $param(lutclrs); ds9_lut $xpa_method $lutnum $lutsys $lutclr1 $lutclr2 $lutclr3 $lutclr4 $lutclr5 $lutclr6 |& $text

  ---


  DAX Help
  *
  menu
  ahelp -n 80 dax | $text
  
    

    
    
    #
    # end CIAO
    #
endhmenu
    
    
    
