    
# 
#  Copyright (C) 2004-2008  Smithsonian Astrophysical Observatory
#
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write to the Free Software Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#


    
# Image processing tasks
    
    
# ---------------
# dmimgblob
# ---------------
param blob
  threshold entry {threshold } 1 {Connect pixels >= this value}
endparam

# ---------------
# dmimgadapt
# ---------------
param ciaoadapt
  function menu  {function} gaussian|tophat|box|cone|pyramid|hemisphere|quad|exp|lor|walrewop {Smoothing kernel}
  counts   entry {counts} 16 {Number of counts under kernel}
  minrad   entry {minrad} 0.5 {Min. kernel radii}
  maxrad   entry {maxrad} 15.0 {Max. kernel radii}
  numrad   entry {numrad} 30 {Nuber of kernel radii}
  radstep  menu  {radstep} log|linear {Spacing between radii}
endparam

# ---------------
# dmimgfilt
# ---------------
param filt
  function menu  {function} median|extreme|kuwahara|locheq|max|mcv|mean|min|mid|mode|nmode|peak|q25|q33|q67|q75|range|rclip|sigma|sum|unsharp|valley|variance|count|olympic|pmean {Filter function}
  mask entry {mask} {} {Region mask}
  niter entry {niter} 1 {Number of iterations}
endparam

# ---------------
# dmimgthresh
# ---------------
param threshold
  cut entry {cut} {} {Threshold cutoff}
  thr_value entry {value} {} {Replacement value}
endparam


# ---------------
# dmimggrad
# ---------------
param grad
  grad menu {gradient} laplace|roberts|prewitt|sobel|robison|kirsch  {Gradient estimator}
  graddir menu {value} mag|x|y|angle {Gradient direction}
endparam

# ---------------
# dmnatilus
# ---------------
param bin
  snr entry {snr} 5 {Signal-to-noise value to bin}
endparam


# ---------------
# aconvolve
# ---------------
param convolve
  smker menu {Smoothing Kernel} gaus|tophat|box|mexhat|sinc|power|exp|beta|cone|pyramid|sphere
  xxsig entry {x-width} 3 {X-size}
  zoobar entry {y-width} 3 {Y-size}
  speed menu {Convolution type} slide|fft
endparam


#
# Period Fold
#
param time
  min_time entry {Minimum time} 1
  max_time entry {Maximum time} 1000
endparam

#
# lasso
#
param lasso
  min_pix entry {Minimum pixel value} 1.0
  max_pix entry {Maximum pixel value} INDEF
endparam

#
# project
#
param project
  axis menu {Which axis to project onto?} x|y
  stat menu {which statistic to compute?} sum|number|mean|min|min_loc|max|max_loc|median|med_loc|range|stdev
endparam

param poly_params
  poly_method menu {Weighting} closest|average|weight|minimum|maximum|furthest {Interpolation method} 
  poly_plot menu {Plot X-axis} x|y|angle|radius|rownum {What to plot data versus}
endparam


#
# ellipse
#
param myell
  ellipse_frac entry {Fraction(s) to compute} 0.9
endparam

param regions
  minval entry {Value below which to exclude} 0
endparam



#
# dmfilth
#
param filth
  fillmeth menu {Interpolation Method} POISSON|POLY|DIST|GLOBAL
endparam

param histogram
  bincol entry {Column to bin} 
  binspec entry {Binning specification}
  ftype menu {File type} pha1|ltc1|generic
  grptype menu {Grouping Method} NONE|SNR|NUM_BINS|NUM_CTS|ADAPTIVE|ADAPTIVE_SNR|BIN_WIDTH|MIN_SLOPE|MAX_SLOPE|BIN_FILE
  grpval entry {Grouping value}
endparam


param csmooth
  sclmin entry {Minimum smoothing scale} INDEF
  sclmax entry {Maximum smoothing scale} INDEF
  sigmin entry {Minimum significance } 3
  sigmax entry {Maximum significance } 5
  kernel menu { Smoothing kernel} gauss|tophat
endparam


param psfsize
  energy entry {Energy} 1.5 {keV}
  frac   entry {PSF Fraction} 0.95 {0.0 to 1.0}
endparam


param psffrac
  fenergy entry {Energy} 1.5 {keV}
endparam

###param colden
###  miss menu {Data source} nrao|bell {blah}
###endparam


param spectral
  model menu {Model} xszpowerlw|xszbbody|xsbknpower|xscutoffpl|xszgauss|xsdiskline|xsapec|xsbapec|xsmekal|xsvmekal|xsraymond|xszbremss|xscemekl {Spectral Model}
  add_model menu {Additional component} none|xszpowerlw|xszbbody|xsbknpower|xscutoffpl|xszgauss|xsdiskline|xsapec|xsbapec|xsmekal|xsvmekal|xsraymond|xszbremss|xscemekl {Spectral Model}
  grpcts entry {grpcts} 20 {Group channels by number of counts}
  elo entry {elo} 0.3 {[keV] Lower energy range to perform fit}
  ehi entry {ehi} 7.0 {[keV] Upper energy range to perform fit}
  extra entry {extra} {} {Additional commands, use mdl1 and abs1, eg mdl1.redshift=0.2}
  specfit_method menu {Method} levmar|neldermead|moncar {Optimization method}
  specfit_stat menu {Statistic} chi2gehrels|chi2xspecvar|cash|cstat|wstat {Goodness of fit statistic}
  specfit_absmodel menu {Absorption model} xswabs|xsphabs {Absorption model}
endparam

param imagefit
  imgmodel menu {Source} gauss2d|beta2d|devaucouleurs2d|lorentz2d {Source model component}
  bkgmodel menu {Background} const2d|polynom2d {Background model component}
  getconf checkbox {Confidence} 0 {Compute confidence intervals (slow)}
  imgfit_method menu {Method} levmar|neldermead|moncar {Optimization method}
  imgfit_stat menu {Statistic} chi2gehrels|chi2xspecvar|cash|cstat|wstat {Goodness of fit statistic}
endparam


param rproffit
   rprof_units menu {Units} physical|arcsec {Display radius in which units?}
   rprof_srcA menu {Model1} gauss1d|beta1d|const1d|lorentz1d|polynom1d|powlaw1d {First model component}
   rprof_srcB menu {Model2} none|gauss1d|beta1d|const1d|lorentz1d|polynom1d|powlaw1d {2nd additive model component}
   rprof_mthd menu {Method} levmar|neldermead|moncar {Optimization method}
endparam


param srcflux
  energy entry {Energy band} broad {CSC bands or values in keV}
  model entry {Model definition} "xspowerlaw.pow1" {Sherpa model expression}
  pmvals entry {Model parameters} "pow1.PhoIndex=2.0" {Sherpa model parameters}
  absmodel entry {Absorption model} "xsphabs.abs1" {Sherpa model expression}
  apmvals entry {Absorption parameters} abs1.nH=0.0 {Sherpa model parameters}
  psfmethod menu {PSF Method} arfcorr|ideal|quick|marx {How to account for PSF fraction}
endparam

param dl_obsid
  dlobi entry {Chandra OBS_ID} {} {only public OBS_IDs are accessible}
  dldir entry {Download directory} {./} {default will download to directory where ds9 was launched.}
  dlview menu {Load evt2 file?} {yes|no}
endparam  


param dl_csc
  dlobi entry {Chandra OBS_ID} {} {only public OBS_IDs are accessible}
  dldir entry {Download directory} {./} {default will download to directory where ds9 was launched.}
  dlview menu {Load catalog?} {yes|no}
endparam  


param radial_profile
   rad_units menu {Units} physical|arcsec {Display radius in which units?}
endparam

param contour_lvs
   c_levels entry {Contour Levels} {} {List of contour levels}
endparam


param tgcoords
    tgenergy entry {Energy} {} {Locate sky coordinate for what energy [kev]}
    tg_m entry {Order} {} {For which grating order -8..-1, 1..8}
endparam


param regrid2
    rd_xoff entry {X Offset} {0.0} {pixels to shift in +X direction}
    rd_yoff entry {Y Offset} {0.0} {pixels to shift in +Y direction}
    rd_rot  entry {Rotate} {0.0} {degrees to rotate about +X axis}
    rd_xscl entry {X Scale} {1.0} {scaling applied to X axis}
    rd_yscl entry {Y Scale} {1.0} {scaling applied to Y axis}
    rd_xcen entry {X center} {INDEF} {center of X-axis, INDEF: len(x)/2}
    rd_ycen entry {Y center} {INDEF} {center of Y-axis, INDEF: len(y)/2}
    rd_mthd menu {Normalization} {sum|average} {sum: preserve flux, average: preserve mean value}
endparam



# ------------------------------------------------------


hmenu CIAO tools (DAX)

#NEW#  hmenu Archive
#NEW#
#NEW#    Download Chandra OBS_ID
#NEW#    *
#NEW#    menu
#NEW#    $param(dl_obsid); $env(ASCDS_CONTRIB)/bin/ds9_dl_obsid.sh $xpa $dlobi $dldir $dlview  |& $text
#NEW#
#NEW#    CSC By OBS_ID
#NEW#    *
#NEW#    menu
#NEW#    $param(dl_csc); $env(ASCDS_CONTRIB)/bin/ds9_dl_csc.sh $xpa $dlobi $dldir $dlview  |& $text
#NEW#
#NEW#  endhmenu
  
  ---

  hmenu Statistics

    Net Counts
    *
    menu
    $env(ASCDS_CONTRIB)/bin/ds9_functs  $xpa  |& $text

    Photometry (srcflux)
    *EVT* *evt*
    menu
    $param(srcflux); $env(ASCDS_CONTRIB)/bin/ds9_aper.sh $xpa "$energy" "$model" "$pmvals" "$absmodel" "$apmvals" "$psfmethod" |& $text

    ---

    Statistics (dmstat)
    *
    menu
    $env(ASCDS_CONTRIB)/bin/ds9_stats.sh allc $xpa $regions(ciao,strip) |& $text


    centroid snap selected
    *
    bind F1
    $data | $env(ASCDS_CONTRIB)/bin/ds9_snap2.sh $xpa |& $text
    
    ---
    
    moments
    *
    menu
    $env(ASCDS_CONTRIB)/bin/ds9_stats.sh moments $xpa $regions(ciao,strip) |& $text
    
    ---
    
    help


    Net Coounts - [dmextract] computes simple net counts, and count-rates 
    
    
    Photometry - [srcflux]  computes photon and energy fluxes assuming 
    a user specified spectral model.

    Statistics - [dmstat]  compute various image pixel statistics: 
    centroid, min, max, mean, median, standard deviation, sum, and area.

    moments - [imgmoment] computes the 2nd order image moments and some 
    derived values such as ellipticity, major and minor axes, and rotation 
    angle. 

    
    endhelp
    
    
  endhmenu
    
  ---
    
  hmenu Histograms

    Generic Histogram
    *evt* *EVT*
    menu
    $param(histogram); $env(ASCDS_CONTRIB)/bin/ds9_generic_hist.sh $xpa $bincol $binspec $ftype $grptype $grpval |& $text

    --- 

    PHA 
    *evt* *EVT*
    menu
    $env(ASCDS_CONTRIB)/bin/ds9_hist.sh pha 4 $filename "$regions(ciao,source,strip)" "$regions(ciao,background,strip)" $xpa |& $text

    PI 
    *evt* *EVT*
    menu
    $env(ASCDS_CONTRIB)/bin/ds9_hist.sh pi 1 $filename "$regions(ciao,source,strip)" "$regions(ciao,background,strip)" $xpa |& $text

    TIME 
    *evt* *EVT*
    menu
    $env(ASCDS_CONTRIB)/bin/ds9_hist.sh time "$entry(Bin size)" $filename "$regions(ciao,source,strip)" "$regions(ciao,background,strip)" $xpa |& $text


    EXPNO 
    *evt* *EVT*
    menu
    $env(ASCDS_CONTRIB)/bin/ds9_hist.sh expno "$entry(Bin size)" $filename "$regions(ciao,source,strip)" "$regions(ciao,background,strip)" $xpa  |& $text

    ---
    
    Pixel
    *
    menu
    $data | $env(ASCDS_CONTRIB)/bin/ds9_imghist.sh "$regions(ciao,strip)" $xpa |& $text

    Project
    *
    menu
    $param(project); $data | $env(ASCDS_CONTRIB)/bin/ds9_project.sh $stat $axis "$regions(ciao,strip)" $xpa |& $text

    Radial Profile
    *
    menu
    $param(radial_profile); $data | $env(ASCDS_CONTRIB)/bin/ds9_radial.sh $xpa $rad_units|& $text

    Extract Along Polygon
    *
    menu
    $param(poly_params); $data | $env(ASCDS_CONTRIB)/bin/ds9_poly.sh $xpa $poly_method $poly_plot |& $text
    
    
    ---
    
    Period Fold
    *evt* *EVT*
    menu
    $param(time); ds9_time.sh pfold $filename $min_time $max_time "$regions(ciao,source,strip)" "" $xpa |& $text

    G-L Vary
    *evt* *EVT*
    menu
    ds9_time.sh gl $filename INDEF INDEF "$regions(ciao,source,strip)" "" $xpa |& $text


    ---

    help

       Generic Histogram - [dmextract] extracts histogram and optionally groups it 
         (usually for PHA files) for an arbitrary column.

       PHA - [dmextract] extract spectrum in PHA channels using 1:4096:4

       PI - [dmextract] extract spectrum in PI (calibrated) channels using 1:1024:1

       TIME - [dmextract] extract light curve with user specified time-bin

       EXPNO - [dmextract] extract light curve for ACIS data using exposure number

       Pixel - [dmimghist] compute histogram of pixel values in region

       Project - [dmimgproject] compute projections of data in region onto X or Y axes

       Radial Profile - [dmextract] compute surface brightness 

       Extract Along Polygon - [dmimgpick] get pixel values at polygon end points

       Period Fold - [pfold] a simple period fold search

       G-L Vary - [glvary] Gregory-Laredo Bayesian Lightcurve

    endhelp



  endhmenu
    
  ---
    
  hmenu Coords
    
    All
    *
    menu
    $env(ASCDS_CONTRIB)/bin/ds9_coord.sh $xpa |& $text


    Chandra Field-of-View
    *
    menu
    $data | $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa skyfov |& $text


    Chandra Grating Energy Lookup
    *
    menu
    $param(tgcoords); $env(ASCDS_CONTRIB)/bin/ds9_tgcoord.sh $xpa $tgenergy $tg_m |& $text

#    ---

##    Colden
##    *
##    menu
##    $param(colden); prop_colden data $miss eval $x(fk5,sexagesimal) $y(fk5,sexagesimal) |& $text

  ---
    
    help

    All - [dmcoords] computes various Chandra specific coordinates
    (chip, det, tdet, off-axis-angles) at the location of the 
    crosshair, or the 1st selected region.
    
    Chandra Field-of-View - [skyfov] computes a polygon enclosing
    each CCD.

    Chandra Grating Energy Lookup - [dmcoords] show where the dispersed 
    energy+order will be imaged using the zero order position taken from
    the location of the crosshair or the 1st selected region
    
    endhelp
    
    
    
  endhmenu
    
    
  ---
    
  hmenu Detect
    
    wavdetect
    *
    menu
    $data | $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa wavdetect "$entry(Wavelet Scales)" |& $text


    celldetect
    *
    menu
    $data | $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa celldetect "$entry(Cell Size)" |& $text

    vtpdetect
    *
    menu
    $data | $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa vtpdetect  |& $text
    
    get_src_region
    *
    menu
    $data | $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa get_src_region  |& $text
    
    ---
    
    help

    wavdetect - [wavdetect] uses a Marr wavelet detection algorithm.
    User inputs the list of wavelet scales to search; values are typically
    powers of 2.
    
    celldetect - [celldetect] a simple sliding cell source detection.
    User inputs the detect cell size (must be an integer multiple of 3).
    
    vtpdetect - [vtpdetect] source detect using Voronoi Tesselation and 
    Percolation; useful to find faint diffuse emission.
    
    get_src_region - [get_src_region] a fast algorithm to identify 
    pixels above background.

    
    endhelp
   
  endhmenu

  ---
    
  hmenu Regions

    Lasso
    *
    menu
    $param(lasso); $data | $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa dmimglasso $min_pix $max_pix |& $text
    
    Contour
    *
    menu
    $param(contour_lvs); $data | $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa dmcontour $c_levels |& $text

    
    ---
    
    Ellipse
    *
    menu
    $param(myell); $data | $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa dmellipse "$ellipse_frac" ellipse "$regions(ciao,strip)" |& $text

    Rotbox
    *
    menu
    $param(myell); $data | $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa dmellipse "$ellipse_frac" rotbox "$regions(ciao,strip)" |& $text
    
    ---

    Convex Hull
    *
    menu
    $param(regions); $data | $env(ASCDS_CONTRIB)/bin/ds9_hull_n_tess.sh hull $xpa "$minval" "$regions(ciao,strip)" |& $text

#    Voroni Tesselation
#    *
#    menu
#    $param(regions); $data | $env(ASCDS_CONTRIB)/bin/ds9_hull_n_tess.sh tess $xpa "$minval" "$regions(ciao,strip)" |& $text

#    Delaunay Triangulation
#    *
#    menu
#    $param(regions); $data | $env(ASCDS_CONTRIB)/bin/ds9_hull_n_tess.sh tri $xpa "$minval" "$regions(ciao,strip)" |& $text

    ---
    
    PSF Size
    *
    menu
    $param(psfsize); $env(ASCDS_CONTRIB)/bin/ds9_get_psfsize.sh $xpa $energy $frac |& $text

    PSF Fraction
    *
    menu
    $param(psffrac); $env(ASCDS_CONTRIB)/bin/ds9_get_psffrac.sh $xpa $fenergy |& $text

###    SAOTrace PSF Simulation
###    *EVT* *evt*
###    menu
###    $env(ASCDS_CONTRIB)/bin/ds9_saotrace.sh $xpa |& $text


   
    ---
    
    help
    
    Lasso - [dmimglasso] (crosshair mode only) create a region that
    encloses the current crosshair location with pixel in specified 
    range of values.
    
    Contour - [dmcontour] create contour regions at specified levels.  
    Interior regions (ie holes) will be automatically excluded.
    
    Ellipse - [dmellipse] find ellipse that encloses a fraction 
    of the total flux.
    
    Rotbox - [dmellipse] find a rotated box that encloses a fraction 
    of the total flux.
    
    Convex Hull - [dmimghull] computes the convex hull around the
    pixels in region above the threshold.
    
    PSF Size - [] Creates a circular region as the current location
    that encloses the specified fraction at the specified energy.
    
    PSF Fraction - (circles only) computes the fraction of the PSF
    inside the current circle at the specified energy.

    
    endhelp
   
    
    
  endhmenu
    
  ---

  hmenu Sherpa

    Spectral Fit
    *EVT* *evt*
    menu
    $param(spectral); $env(ASCDS_CONTRIB)/bin/ds9_specfit.sh $xpa $model $add_model $grpcts $elo $ehi $specfit_method $specfit_stat $specfit_absmodel '$extra' |& $text
 
    ---

    2D Image Fit
    *
    menu
    $param(imagefit); $env(ASCDS_CONTRIB)/bin/ds9_imgfit.sh $xpa $imgmodel $bkgmodel $getconf $imgfit_method $imgfit_stat |& $text

#NEW#    Source Extent
#NEW#    *
#NEW#    menu
#NEW#    $env(ASCDS_CONTRIB)/bin/ds9_extent "$filename" "$regions(ciao,strip)" |& $text


     ---
     
     Radial Profile Fit
     *
     menu
     $param(rproffit); $env(ASCDS_CONTRIB)/bin/ds9_radial_fit $xpa $rprof_units $rprof_srcA $rprof_srcB $rprof_mthd |& $text


     ---
     
      help
      
      Spectral Fit - [specextract, sherpa] extracts the source
      and background spectra and then fits the spectra with sherpa.  

            Model       Description:

            xszbbody    Black Body              
            xszpowerlw  Power Law               
            xsbknpower  Broken Pow Law          
            xscutoffpl  Pow Law w/ cutoff       
            xszgauss    Gaussian                
            xsdiskline  Disk Line Emission      
            xsapec      APEC                    
            xsbapec     BAPEC                   
            xsmekal     Mekal                   
            xsvmekal    Mekal (abund)           
            xsraymond   Raymond-Smith           
            xszbremss   Thermal Brems           
            xscemekl    Multi-temp Plasma       


      
      2D Image Fit - [sherpa] fit the image data inside
      the region with a 2D model
      
      Radial Profile Fit - [dmextract, sherpa] extract a 
      radial profile from source and background region and fit.
      
      endhelp


  endhmenu
 


  ---
    
  hmenu Image Processing
    
    
    Blob
    *
    menu
    $param(blob); $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa dmimgblob $threshold |& $text
    
    Adaptive Smooth
    *
    menu
    $param(ciaoadapt); $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa dmimgadapt $function $minrad $maxrad $numrad $radstep $counts |& $text

    Csmooth
    *
    menu
    $param(csmooth); $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa csmooth $kernel $sigmin $sigmax $sclmin $sclmax |& $text
    
    Filter
    *
    menu
    $param(filt); $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa dmimgfilt $function $mask $niter |& $text
    
    
    Threshold
    *
    menu
    $param(threshold); $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa dmimgthresh $cut $thr_value |& $text
    
#    Gradient
#    *
#    menu
#    $param(grad); $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa dmimggrad $grad $graddir |& $text
    
    Adaptive Bin
    *
    menu
    $param(bin); $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa dmnautilus $snr |& $text
    
    Distrance Transform
    *
    menu
    $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa dmimgdist |& $text

    L-R Decovolution
    *
    menu
    $env(ASCDS_CONTRIB)/bin/ds9_restore.sh $xpa $regions(ciao,strip) |& $text

    
    ---
    
    Smoothing
    *
    menu
    $param(convolve); $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa aconvolve $smker $xxsig $zoobar $speed |& $text
    
    ---
    
    Source Fill
    *
    menu
    $param(filth); $data | $env(ASCDS_CONTRIB)/bin/ds9_fill.sh $xpa $fillmeth |& $text
    

    ---
    Regrid
    *
    menu
    $param(regrid2); $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa dmregrid2 $rd_xoff $rd_yoff $rd_rot $rd_xscl $rd_yscl $rd_xcen $rd_ycen $rd_mthd |& $text

    ---
    Powerspectrum
    *
    menu
    $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa apowerspectrum |& $text

    Autocorrelate
    *
    menu
    $env(ASCDS_CONTRIB)/bin/ds9_imgproc_wrapper $xpa acrosscorr |& $text
    

    ---
    help
    
    Various image processing tasks

      Blob - [dmimgblob] group pixels > threshold together. Output is a mask with
	  disjoint groups identified.  Best with smoothed images

      Adaptive Smooth - [dmimgadapt] yet another adaptive smoothing algorithm that
          works to preserve photometry

      Csmooth - [csmooth] runs the CIAO tool of the same name

      Filter - [dmimgfilt] apply various non-linear filters to image

      Threshold - [dmimgthresh] replace values above/below threshold with constant

      Adaptive Bin - [dmnautilus] quad-tree algorithm to group pixels together until
	     the SNR of the group drops below threshold

      Distance Transform - [dmimgdist] computes the distance from each pixel to 
          the closest edge (where edge is pixels below threshold)
      
      L-R Deconvoluiton - [arestore] Lucy Richardson deconvolution; draw a region around
	     what is believed to be a point source and it is used as the PSF.

      Smoothing - [aconvolve] additional smoothing kernels and non circularly symetric smoothing.

      Source Fill - [dmfilth] draw regions for source and background; group them together
     	and then will use background to replace pixels in the source region.

      Powerspectrum - [apowerspectrum] compute |FFT| of image

      Autocorrelate - [acrosscorr] compute correlation of image with itself     

    
    endhelp
    
    
  endhmenu

  ---
  Change DAX output directory
  *
  menu
  xpaset -p $xpa tcl "{ChangeDaxOutdir}" | $text
    
  ---

  DAX Help
  *
  menu
  ahelp -n 80 dax | $text
  
    
    

    #  ColorMap
    #  *
    #  menu
    #  $env(ASCDS_CONTRIB)/bin/ds9_mkgrad.sh $xpa  "$entry(Colors)" | $text
    
    
    #
    # end CIAO
    #
endhmenu
    
    
    
